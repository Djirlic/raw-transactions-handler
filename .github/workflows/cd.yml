name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install AWS CLI
        run: |
          pip install awscli

      - name: Extract layer dependencies from pyproject.toml
        run: |
          python scripts/export_layer_requirements.py

      - name: Build Lambda Layer
        run: |
          mkdir -p layer/python
          pip install -r requirements-layer.txt -t layer/python
          find layer -name "*.so" | xargs file
          cd layer
          zip -r ../layer.zip python/
          cd ..

      - name: Publish Lambda Layer
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.LAYER_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.LAYER_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          LAYER_VERSION=$(aws lambda publish-layer-version \
            --layer-name CreditCardTransactionsQualityGateDependencies \
            --description "Dependencies for Credit Card Quality Gate Function" \
            --zip-file fileb://layer.zip \
            --compatible-runtimes python3.13 \
            --region $AWS_REGION \
            --query Version --output text)

            echo "LAYER_VERSION=$LAYER_VERSION" >> $GITHUB_ENV

      - name: Clean up build artifacts
        run: |
          rm -rf layer layer.zip requirements-layer.txt

      - name: Package Lambda
        run: |
          cd src
          zip -r ../function.zip handler/

      - name: Deploy to Lambda
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws lambda update-function-code \
            --function-name CreditCardTransactionsQualityGateFunction \
            --region $AWS_REGION \
            --zip-file fileb://function.zip

          aws lambda wait function-updated \
            --function-name CreditCardTransactionsQualityGateFunction \
            --region $AWS_REGION

          aws lambda update-function-configuration \
            --function-name CreditCardTransactionsQualityGateFunction \
            --region $AWS_REGION \
            --layers arn:aws:lambda:$AWS_REGION:${{ secrets.AWS_ACCOUNT_ID }}:layer:CreditCardTransactionsQualityGateDependencies:$LAYER_VERSION
